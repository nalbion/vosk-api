name: Kaldi

on:
  push:
    branches:
      - master
  schedule:
    - cron: '0 0 * * *'

jobs:
  windows:
    runs-on: windows-latest

    strategy:
      matrix:
        configuration: [Debug, Release]

    steps:
      - name: Checkout kaldi repo
        uses: actions/checkout@v2
        with:
          repository: kaldi-asr/kaldi
          path: kaldi

      - name: Checkout OpenFST repo
        uses: actions/checkout@v2
        with:
          repository: kkm000/openfst
          ref: winport
          path: openfst

      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.0.0

      - name: Compile OpenFST
        working-directory: openfst
        # cmake --build build64 --config Release|x64
        # msbuild /p:Configuration=$env:Configuration /p:UapAppxPackageBuildMode=$env:Appx_Package_Build_Mode /p:AppxBundle=$env:Appx_Bundle /p:PackageCertificateKeyFile=GitHubActionsWorkflow.pfx /p:PackageCertificatePassword=${{ secrets.Pfx_Key }}
        run: |
          mkdir build64 && cd build64 && cmake ..
          msbuild openfst.sln /p:Configuration=$env:Configuration
        env:
          Appx_Bundle: Always
          Appx_Bundle_Platforms: x86|x64
          Appx_Package_Build_Mode: StoreUpload
          Configuration: ${{ matrix.configuration }}

      # TODO: right click portaudio_static->Properties->C/C++->Code Generation->Runtime Library Change from Multi-Threaded Debug (/MTd) to Multi-threaded Debug DLL (/MDd)
      # Builds portaudio\build64\Debug\portaudio_x64.dll
      - name: Compile PortAudio
        # https://git.assembla.com/portaudio.git
        #cmake --build build64 --config Release|x64
        run: |
          curl -L -O http://www.portaudio.com/archives/pa_stable_v190600_20161030.tgz
          dir
          tar xzvf pa_stable_v190600_20161030.tgz
          dir
          cd portaudio
          mkdir build64 && cd build64 && cmake ..
          msbuild portaudio.sln /p:Configuration=$env:Configuration
        env:
          Configuration: ${{ matrix.configuration }}

      - name: Prepare Kaldi
        working-directory: kaldi/tools
        run: |
          curl -L -O http://sourceforge.net/projects/openblas/files/v0.2.14/OpenBLAS-v0.2.14-Win64-int32.zip
          curl -L -O http://sourceforge.net/projects/openblas/files/v0.2.14/mingw64_dll.zip
          unzip OpenBLAS-v0.2.14-Win64-int32.zip
          unzip mingw64_dll.zip

      - name: Configure Kaldi
        working-directory: kaldi/windows
        shell: powershell
        #        run: (gc variables.props.dev) -replace 'foo', 'bar' | Out-File -encoding ASCII variables.props
        run: |
          (Get-Content 'variables.props.dev') | Foreach-Object {
            $_ -replace '(<OPENBLASDIR>).*(</OPENBLASDIR>)', '${1}OpenBLAS-v0.2.14-Win64-int32${2}' `
            -replace '(<OPENFST>).*(</OPENFST>)', '${1}..\openfst${2}' `
            -replace '(<OPENFSTLIB>).*(</OPENFSTLIB>)', '${1}..\openfst\build64${2}' `
            -replace '(<PORTAUDIO>).*(</PORTAUDIO>)', '${1}..\openfst${2}' `
            -replace '(<PORTAUDIOLIB>).*(</PORTAUDIOLIB>)', '${1}..\portaudio${2}'
          } | Set-Content 'variables.props'
      #            -replace '(<NVTOOLSDIR>).*(</NVTOOLSDIR>)', '${1}..\openfst${2}'

      - name: Compile Kaldi
        working-directory: kaldi/windows
        shell: powershell
        run: |
          generate_solution.pl --enable-openblas
          get_version.pl
          dir

  linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout kaldi repo
        uses: actions/checkout@v2
        with:
          repository: kaldi-asr/kaldi
          path: kaldi

      - name: Compile Kaldi
        working-directory: kaldi/tools
        # extras/install_mkl.sh
        run: |
          sudo apt-get install -y sox gfortran zlib1g-dev libtool
          ./extras/install_openblas.sh
          ./extras/check_dependencies.sh
          make
          cd ../src
          ./configure --mathlib=OPENBLAS --shared --use-cuda=no
          make -j depend; make -j 8
          cd ..
          find -name '*.a' -printf '%P\0' | tar --null --files-from=- -cf 'kaldi-libs.tgz'

      - name: Save kaldi-libs-a
        uses: actions/upload-artifact@v2
        working-directory: kaldi
        with:
          name: kaldi-libs-a
          path: (src|tools)/**/*.a

      - name: Save kaldi-libs.tgz
        uses: actions/upload-artifact@v2
        working-directory: kaldi
        with:
          name: kaldi-libs.tgz
          path: kaldi-libs.tgz
